rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isTeacher() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection
    match /users/{userId} {
      // Anyone can read their own profile
      allow read: if isOwner(userId) || isTeacher() || isAdmin();
      
      // Users can create their own profile on signup
      allow create: if isAuthenticated() && request.auth.uid == userId;
      
      // Users can update their own profile
      allow update: if isOwner(userId);
      
      // Only admins can delete
      allow delete: if isAdmin();
    }
    
    // Quiz results collection
    match /quizResults/{resultId} {
      // Users can read their own quiz results
      allow read: if isAuthenticated() && 
                     resource.data.userId == request.auth.uid ||
                     isTeacher() || isAdmin();
      
      // Users can create their own quiz results
      allow create: if isAuthenticated() && 
                       request.resource.data.userId == request.auth.uid;
      
      // No updates or deletes allowed
      allow update, delete: if false;
    }
    
    // Learning sessions collection
    match /learningSessions/{sessionId} {
      // Users can read their own sessions
      allow read: if isAuthenticated() && 
                     resource.data.userId == request.auth.uid ||
                     isTeacher() || isAdmin();
      
      // Users can create and update their own sessions
      allow create: if isAuthenticated() && 
                       request.resource.data.userId == request.auth.uid;
      
      allow update: if isAuthenticated() && 
                       resource.data.userId == request.auth.uid;
      
      // Only admins can delete
      allow delete: if isAdmin();
    }
    
    // Chat history collection (optional - for storing AI conversations)
    match /chatHistory/{chatId} {
      allow read, write: if isAuthenticated() && 
                            resource.data.userId == request.auth.uid;
    }
  }
}
